import esbuild from "esbuild";
import process from "process";
import builtins from "builtin-modules";
import { copyFileSync, existsSync } from "fs";

const banner =
`/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const prod = (process.argv[2] === 'production');

const context = await esbuild.context({
	banner: {
		js: banner,
	},
	entryPoints: ['main.ts'],
	bundle: true,
	external: [
		'obsidian',
		'electron',
		'@codemirror/autocomplete',
		'@codemirror/collab',
		'@codemirror/commands',
		'@codemirror/language',
		'@codemirror/lint',
		'@codemirror/search',
		'@codemirror/state',
		'@codemirror/view',
		'@lezer/common',
		'@lezer/highlight',
		'@lezer/lr',
		...builtins],
	format: 'cjs',
	target: 'es2018',
	logLevel: "info",
	sourcemap: prod ? false : 'inline',
	treeShaking: true,
	outfile: 'main.js',
	loader: {
		'.js': 'text',  // 将.js文件作为文本导入
	},
	plugins: [
		{
			name: 'copy-render-css',
			setup(build) {
				build.onEnd(() => {
					// 复制render.css为style.css
					if (existsSync('lib/render.css')) {
						copyFileSync('lib/render.css', 'styles.css');
						console.log('✓ Copied lib/render.css to styles.css');
					} else {
						console.warn('⚠ lib/render.css not found');
					}
				});
			}
		}
	]
});

if (prod) {
	await context.rebuild();
	await context.dispose();
} else {
	await context.watch();
} 